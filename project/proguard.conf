-forceprocessing
-optimizationpasses 0
-optimizations !class/merging/*
-verbose
-target 8
-dontobfuscate

-injars target/ArchiveDiff-assembly.jar
-libraryjars ${java.home}/lib/
-outjars target/ArchiveDiff.jar(!**.SF)

# keep enums
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

# for some reason, it complains about duplicate definitions on following:
-dontnote java.math.**
-dontnote java.util.**

# Processing the scala library (as shown in proguard manual)
-dontwarn **$$anonfun$*
-dontwarn scala.collection.immutable.RedBlack$Empty
-dontwarn scala.tools.**,plugintemplate.**
-dontnote scala.concurrent.forkjoin.**
-keepclassmembers class * {
  ** MODULE$;
}
-keep class * implements org.xml.sax.EntityResolver
-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
  long eventCount;
  int  workerCounts;
  int  runControl;
  scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
  scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
}
-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
  int base;
  int sp;
  int runState;
}
-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
  int status;
}
-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
  scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
  scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
  scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
}
# scala 2.11.5
-keepattributes Signature
-dontwarn scala.collection.**
-dontwarn scala.xml.parsing.MarkupParser$$anon$1

-keep public class org.rogach.ardiff.ArchiveDiff { public static void main(java.lang.String[]); }
-keepattributes *Annotation*
